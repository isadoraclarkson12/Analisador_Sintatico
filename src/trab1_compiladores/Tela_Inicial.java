/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package trab1_compiladores;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import static jdk.nashorn.internal.objects.NativeRegExp.test;

/**
 *
 * @author PURGUISA
 */
public class Tela_Inicial extends javax.swing.JFrame {

    /**
     * Creates new form Tela_Inicial
     */
    public Tela_Inicial() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtCaminho = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        btnProcessar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtResposta = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 204, 255));

        txtCaminho.setEditable(false);
        txtCaminho.setColumns(20);
        txtCaminho.setRows(5);
        jScrollPane1.setViewportView(txtCaminho);

        jLabel1.setText("Conteúdo do arquivo");

        btnProcessar.setText("Processar");
        btnProcessar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessarActionPerformed(evt);
            }
        });

        txtResposta.setEditable(false);
        txtResposta.setColumns(20);
        txtResposta.setRows(5);
        jScrollPane2.setViewportView(txtResposta);

        jMenu1.setText("Arquivo");

        jMenuItem1.setText("Abrir");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Informações");

        jMenuItem2.setText("Sobre");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 633, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnProcessar))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 484, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnProcessar)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        final JFileChooser fc = new JFileChooser();
        int returnVal = fc.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            try {
                BufferedReader in;
                in = new BufferedReader(new FileReader(file));
                String line = in.readLine();
                String conteudo = "";
                txtCaminho.setText("");
                while (line != null) {
                    if (!txtCaminho.getText().equals("")) {
                        conteudo = txtCaminho.getText();
                    }
                    txtCaminho.setText(conteudo + line + "\n");
                    line = in.readLine();
                }
            } catch (FileNotFoundException ex) {
                //Logger.getLogger(test.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                //Logger.getLogger(test.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            System.out.println("File access cancelled by user.");
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void btnProcessarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessarActionPerformed
        String entrada = txtCaminho.getText();
        Reconhecedor rec = new Reconhecedor();
        ArrayList<Token> tt = rec.rotinaNumero(entrada);
        ArrayList<Token> ttId = rec.rotinaIdentificador(entrada);
        txtResposta.setText("\n=================================== ESTATÍSTICAS ===================================\n\nQuantidade de caracteres (incluindo espaço):" + rec.contarCaracteresCEspaco(entrada)
                + "\nQuantidade de caracteres (sem considerar o espaço): " + rec.contarCaracteresSEspaco(entrada)
                + "\nQuantidade de palavras: " + rec.contarPalavras(entrada)
                + "\nQuantidade de operadores (relacionais e aritméticos): " + rec.contarOperadores(entrada)
                + "\nQuantidade de linhas: " + rec.contarLinhas(entrada)
                + "\nQuantidade de números (reais e inteiros): " + tt.size()
                + "\nQuantidade de Identificadores: " + ttId.size());
        ArrayList<Indice> Indices = rec.montaIndice(ttId, entrada);
        Collections.sort(Indices, new Comparator() {
            public int compare(Object o1, Object o2) {
                Indice i1 = (Indice) o1;
                Indice i2 = (Indice) o2;
                return i1.getValor().compareToIgnoreCase(i2.getValor());
            }
        });
        ArrayList<Character> auxs = new ArrayList<Character>();
        String results = "\n\n================================= ÍNDICE ALFABÉTICO =================================";
        boolean existe = false;
        for (Indice i : Indices) {
            char aux = i.getPrimeiraLetra();
            if (auxs.size() > 0) {
                for (char letra : auxs) {
                    if (letra == aux) {
                        existe = true;
                    }else{
                        existe = false;
                    }
                }
            }
            if (!existe) {
                results += "\n\n"+aux+"\n\n";
                for (Indice i2 : Indices) {
                    if (i2.getPrimeiraLetra() == aux) {
                        results += i2.getValor()+" "+"("+i2.getFrequencia()+") : ";
                        ArrayList<Matriz> ocor = i2.getLinhaOcor();
                        int j = 0;
                        int tam = ocor.size();
                        System.out.println(i2.getValor());
                        System.out.println(tam);
                        for(Matriz m : ocor){
                            if(j < (tam-1)){
                                results += (m.getLinha()+1)+"("+m.getOcorrencia()+"), ";
                            }else{
                                results += (m.getLinha()+1)+"("+m.getOcorrencia()+")\n";
                            }
                            j++;
                        }
                    }
                }
                auxs.add(aux);
            }
        }
        txtResposta.setText(txtResposta.getText()+results);
        // System.out.println("Quantidade de caracteres (incluindo espaço): "+rec.contarCaracteresCEspaco(entrada));
        //System.out.println("Quantidade de caracteres (sem considerar o espaço): "+rec.contarCaracteresSEspaco(entrada));
        //System.out.println("Quantidade de palavras (*): "+rec.contarPalavras(entrada));
        //System.out.println("Quantidade de operadores (relacionais e aritméticos): "+rec.contarOperadores(entrada));
        //System.out.println("Quantidade de linhas: "+rec.contarLinhas(entrada));
    }//GEN-LAST:event_btnProcessarActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        JOptionPane.showMessageDialog(null, "Desenvolvido por:\n -> Giulia Meirelles Bertulucci \n -> Isadora Faria Martins");
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tela_Inicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tela_Inicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tela_Inicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tela_Inicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tela_Inicial().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnProcessar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea txtCaminho;
    private javax.swing.JTextArea txtResposta;
    // End of variables declaration//GEN-END:variables
}
